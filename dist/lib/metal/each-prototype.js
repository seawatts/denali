"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * A utility method to walk up the prototype chain of the supplied object, calling the given
 * function with each prototype until it reaches the root of the prototype chain (where the
 * prototype is Object).
 *
 * This is useful for dealing with accumulating inheritance. For example, Action classes accumulate
 * their filters through inheritance, rather than replacing them. Since ES6/7 has no mechanism for
 * accumulating a value, we let each child class wipe out it's parent value, and rebuild the
 * accumulated value manually via this kind of prototype walking.
 *
 * @package metal
 */
function eachPrototype(obj, fn) {
    let prototype = obj;
    while (prototype !== Object && prototype !== null) {
        fn(prototype);
        prototype = Object.getPrototypeOf(prototype);
    }
}
exports.default = eachPrototype;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWFjaC1wcm90b3R5cGUuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3NlYXdhdHRzL3NyYy9naXRodWIuY29tL3NlYXdhdHRzL2RlbmFsaS8iLCJzb3VyY2VzIjpbImxpYi9tZXRhbC9lYWNoLXByb3RvdHlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7Ozs7OztHQVdHO0FBQ0gsdUJBQXNDLEdBQVEsRUFBRSxFQUE0QjtJQUMxRSxJQUFJLFNBQVMsR0FBRyxHQUFHLENBQUM7SUFDcEIsT0FBTyxTQUFTLEtBQUssTUFBTSxJQUFJLFNBQVMsS0FBSyxJQUFJLEVBQUUsQ0FBQztRQUNsRCxFQUFFLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDZCxTQUFTLEdBQUcsTUFBTSxDQUFDLGNBQWMsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUMvQyxDQUFDO0FBQ0gsQ0FBQztBQU5ELGdDQU1DIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBIHV0aWxpdHkgbWV0aG9kIHRvIHdhbGsgdXAgdGhlIHByb3RvdHlwZSBjaGFpbiBvZiB0aGUgc3VwcGxpZWQgb2JqZWN0LCBjYWxsaW5nIHRoZSBnaXZlblxuICogZnVuY3Rpb24gd2l0aCBlYWNoIHByb3RvdHlwZSB1bnRpbCBpdCByZWFjaGVzIHRoZSByb290IG9mIHRoZSBwcm90b3R5cGUgY2hhaW4gKHdoZXJlIHRoZVxuICogcHJvdG90eXBlIGlzIE9iamVjdCkuXG4gKlxuICogVGhpcyBpcyB1c2VmdWwgZm9yIGRlYWxpbmcgd2l0aCBhY2N1bXVsYXRpbmcgaW5oZXJpdGFuY2UuIEZvciBleGFtcGxlLCBBY3Rpb24gY2xhc3NlcyBhY2N1bXVsYXRlXG4gKiB0aGVpciBmaWx0ZXJzIHRocm91Z2ggaW5oZXJpdGFuY2UsIHJhdGhlciB0aGFuIHJlcGxhY2luZyB0aGVtLiBTaW5jZSBFUzYvNyBoYXMgbm8gbWVjaGFuaXNtIGZvclxuICogYWNjdW11bGF0aW5nIGEgdmFsdWUsIHdlIGxldCBlYWNoIGNoaWxkIGNsYXNzIHdpcGUgb3V0IGl0J3MgcGFyZW50IHZhbHVlLCBhbmQgcmVidWlsZCB0aGVcbiAqIGFjY3VtdWxhdGVkIHZhbHVlIG1hbnVhbGx5IHZpYSB0aGlzIGtpbmQgb2YgcHJvdG90eXBlIHdhbGtpbmcuXG4gKlxuICogQHBhY2thZ2UgbWV0YWxcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZWFjaFByb3RvdHlwZShvYmo6IGFueSwgZm46IChwcm90b3R5cGU6IGFueSkgPT4gdm9pZCkge1xuICBsZXQgcHJvdG90eXBlID0gb2JqO1xuICB3aGlsZSAocHJvdG90eXBlICE9PSBPYmplY3QgJiYgcHJvdG90eXBlICE9PSBudWxsKSB7XG4gICAgZm4ocHJvdG90eXBlKTtcbiAgICBwcm90b3R5cGUgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YocHJvdG90eXBlKTtcbiAgfVxufVxuIl19