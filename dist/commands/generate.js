"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const denali_cli_1 = require("denali-cli");
/**
 * Scaffold code for your app.
 *
 * @package commands
 */
class GenerateCommand extends denali_cli_1.Command {
    static configureSubcommands(commandName, yargs, projectPkg) {
        return denali_cli_1.Blueprint.findAndConfigureBlueprints(yargs, 'generate', projectPkg);
    }
}
/* tslint:disable:completed-docs typedef */
GenerateCommand.commandName = 'generate';
GenerateCommand.description = 'Scaffold code for your app.';
GenerateCommand.longDescription = denali_cli_1.unwrap `
    Usage: denali generate <blueprint> [options]

    Generates code from the given blueprint. Blueprints are templates used by the
    generate command, but they can go beyond simple templating (i.e. installing
    addons).
  `;
GenerateCommand.params = '<blueprint>';
GenerateCommand.flags = {
    skipPostInstall: {
        description: "Don't run any post install hooks for the blueprint",
        default: false,
        type: 'boolean'
    }
};
exports.default = GenerateCommand;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VuZXJhdGUuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3NlYXdhdHRzL3NyYy9naXRodWIuY29tL3NlYXdhdHRzL2RlbmFsaS8iLCJzb3VyY2VzIjpbImNvbW1hbmRzL2dlbmVyYXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsMkNBQXdEO0FBR3hEOzs7O0dBSUc7QUFDSCxxQkFBcUMsU0FBUSxvQkFBTztJQXVCeEMsTUFBTSxDQUFDLG9CQUFvQixDQUFDLFdBQW1CLEVBQUUsS0FBVSxFQUFFLFVBQWU7UUFDcEYsTUFBTSxDQUFDLHNCQUFTLENBQUMsMEJBQTBCLENBQUMsS0FBSyxFQUFFLFVBQVUsRUFBRSxVQUFVLENBQUMsQ0FBQztJQUM3RSxDQUFDOztBQXZCRCwyQ0FBMkM7QUFDcEMsMkJBQVcsR0FBRyxVQUFVLENBQUM7QUFDekIsMkJBQVcsR0FBRyw2QkFBNkIsQ0FBQztBQUM1QywrQkFBZSxHQUFHLG1CQUFNLENBQUE7Ozs7OztHQU05QixDQUFDO0FBRUssc0JBQU0sR0FBRyxhQUFhLENBQUM7QUFFdkIscUJBQUssR0FBRztJQUNiLGVBQWUsRUFBRTtRQUNmLFdBQVcsRUFBRSxvREFBb0Q7UUFDakUsT0FBTyxFQUFFLEtBQUs7UUFDZCxJQUFJLEVBQU8sU0FBUztLQUNyQjtDQUNGLENBQUM7QUFyQkosa0NBMkJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbWFuZCwgQmx1ZXByaW50LCB1bndyYXAgfSBmcm9tICdkZW5hbGktY2xpJztcbmltcG9ydCAqIGFzIHlhcmdzIGZyb20gJ3lhcmdzJztcblxuLyoqXG4gKiBTY2FmZm9sZCBjb2RlIGZvciB5b3VyIGFwcC5cbiAqXG4gKiBAcGFja2FnZSBjb21tYW5kc1xuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHZW5lcmF0ZUNvbW1hbmQgZXh0ZW5kcyBDb21tYW5kIHtcblxuICAvKiB0c2xpbnQ6ZGlzYWJsZTpjb21wbGV0ZWQtZG9jcyB0eXBlZGVmICovXG4gIHN0YXRpYyBjb21tYW5kTmFtZSA9ICdnZW5lcmF0ZSc7XG4gIHN0YXRpYyBkZXNjcmlwdGlvbiA9ICdTY2FmZm9sZCBjb2RlIGZvciB5b3VyIGFwcC4nO1xuICBzdGF0aWMgbG9uZ0Rlc2NyaXB0aW9uID0gdW53cmFwYFxuICAgIFVzYWdlOiBkZW5hbGkgZ2VuZXJhdGUgPGJsdWVwcmludD4gW29wdGlvbnNdXG5cbiAgICBHZW5lcmF0ZXMgY29kZSBmcm9tIHRoZSBnaXZlbiBibHVlcHJpbnQuIEJsdWVwcmludHMgYXJlIHRlbXBsYXRlcyB1c2VkIGJ5IHRoZVxuICAgIGdlbmVyYXRlIGNvbW1hbmQsIGJ1dCB0aGV5IGNhbiBnbyBiZXlvbmQgc2ltcGxlIHRlbXBsYXRpbmcgKGkuZS4gaW5zdGFsbGluZ1xuICAgIGFkZG9ucykuXG4gIGA7XG5cbiAgc3RhdGljIHBhcmFtcyA9ICc8Ymx1ZXByaW50Pic7XG5cbiAgc3RhdGljIGZsYWdzID0ge1xuICAgIHNraXBQb3N0SW5zdGFsbDoge1xuICAgICAgZGVzY3JpcHRpb246IFwiRG9uJ3QgcnVuIGFueSBwb3N0IGluc3RhbGwgaG9va3MgZm9yIHRoZSBibHVlcHJpbnRcIixcbiAgICAgIGRlZmF1bHQ6IGZhbHNlLFxuICAgICAgdHlwZTogPGFueT4nYm9vbGVhbidcbiAgICB9XG4gIH07XG5cbiAgcHJvdGVjdGVkIHN0YXRpYyBjb25maWd1cmVTdWJjb21tYW5kcyhjb21tYW5kTmFtZTogc3RyaW5nLCB5YXJnczogYW55LCBwcm9qZWN0UGtnOiBhbnkpOiB5YXJncy5Bcmd2IHtcbiAgICByZXR1cm4gQmx1ZXByaW50LmZpbmRBbmRDb25maWd1cmVCbHVlcHJpbnRzKHlhcmdzLCAnZ2VuZXJhdGUnLCBwcm9qZWN0UGtnKTtcbiAgfVxuXG59XG4iXX0=