"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IS_INJECTION = Symbol.for('denali:container:injection-placeholder');
function isInjection(value) {
    return value != null && Boolean(value[exports.IS_INJECTION]);
}
exports.isInjection = isInjection;
function inject(lookup) {
    return {
        [exports.IS_INJECTION]: true,
        lookup
    };
}
exports.default = inject;
function injectInstance(instance, container) {
    let classMeta = container.metaFor(instance.constructor);
    if (!classMeta.injectionsCache) {
        let injections = { container };
        for (let key in instance) {
            let value = instance[key];
            if (isInjection(value)) {
                injections[key] = container.lookup(value.lookup);
            }
        }
        classMeta.injectionsCache = injections;
    }
    // console.log('applying injections to', instance, classMeta.injectionsCache);
    Object.assign(instance, classMeta.injectionsCache);
}
exports.injectInstance = injectInstance;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5qZWN0LmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9zZWF3YXR0cy9zcmMvZ2l0aHViLmNvbS9zZWF3YXR0cy9kZW5hbGkvIiwic291cmNlcyI6WyJsaWIvbWV0YWwvaW5qZWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBT2EsUUFBQSxZQUFZLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO0FBRWpGLHFCQUE0QixLQUFVO0lBQ3BDLE1BQU0sQ0FBQyxLQUFLLElBQUksSUFBSSxJQUFJLE9BQU8sQ0FBQyxLQUFLLENBQUMsb0JBQVksQ0FBQyxDQUFDLENBQUM7QUFDdkQsQ0FBQztBQUZELGtDQUVDO0FBRUQsZ0JBQXdDLE1BQWM7SUFDcEQsTUFBTSxDQUFNO1FBQ1YsQ0FBQyxvQkFBWSxDQUFDLEVBQUUsSUFBSTtRQUNwQixNQUFNO0tBQ1AsQ0FBQztBQUNKLENBQUM7QUFMRCx5QkFLQztBQUVELHdCQUErQixRQUFhLEVBQUUsU0FBb0I7SUFDaEUsSUFBSSxTQUFTLEdBQUcsU0FBUyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDeEQsRUFBRSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQztRQUMvQixJQUFJLFVBQVUsR0FBYyxFQUFFLFNBQVMsRUFBRSxDQUFDO1FBQzFDLEdBQUcsQ0FBQyxDQUFDLElBQUksR0FBRyxJQUFJLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDekIsSUFBSSxLQUFLLEdBQUcsUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQzFCLEVBQUUsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3ZCLFVBQVUsQ0FBQyxHQUFHLENBQUMsR0FBRyxTQUFTLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUNuRCxDQUFDO1FBQ0gsQ0FBQztRQUNELFNBQVMsQ0FBQyxlQUFlLEdBQUcsVUFBVSxDQUFDO0lBQ3pDLENBQUM7SUFDRCw4RUFBOEU7SUFDOUUsTUFBTSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUUsU0FBUyxDQUFDLGVBQWUsQ0FBQyxDQUFDO0FBQ3JELENBQUM7QUFkRCx3Q0FjQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpY3QgfSBmcm9tICcuLi91dGlscy90eXBlcyc7XG5pbXBvcnQgQ29udGFpbmVyIGZyb20gJy4vY29udGFpbmVyJztcblxuZXhwb3J0IGludGVyZmFjZSBJbmplY3Rpb24ge1xuICBsb29rdXA6IHN0cmluZztcbn1cblxuZXhwb3J0IGNvbnN0IElTX0lOSkVDVElPTiA9IFN5bWJvbC5mb3IoJ2RlbmFsaTpjb250YWluZXI6aW5qZWN0aW9uLXBsYWNlaG9sZGVyJyk7XG5cbmV4cG9ydCBmdW5jdGlvbiBpc0luamVjdGlvbih2YWx1ZTogYW55KTogdmFsdWUgaXMgSW5qZWN0aW9uIHtcbiAgcmV0dXJuIHZhbHVlICE9IG51bGwgJiYgQm9vbGVhbih2YWx1ZVtJU19JTkpFQ1RJT05dKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaW5qZWN0PFQgPSBhbnk+KGxvb2t1cDogc3RyaW5nKTogVCB7XG4gIHJldHVybiA8YW55PntcbiAgICBbSVNfSU5KRUNUSU9OXTogdHJ1ZSxcbiAgICBsb29rdXBcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGluamVjdEluc3RhbmNlKGluc3RhbmNlOiBhbnksIGNvbnRhaW5lcjogQ29udGFpbmVyKSB7XG4gIGxldCBjbGFzc01ldGEgPSBjb250YWluZXIubWV0YUZvcihpbnN0YW5jZS5jb25zdHJ1Y3Rvcik7XG4gIGlmICghY2xhc3NNZXRhLmluamVjdGlvbnNDYWNoZSkge1xuICAgIGxldCBpbmplY3Rpb25zOiBEaWN0PGFueT4gPSB7IGNvbnRhaW5lciB9O1xuICAgIGZvciAobGV0IGtleSBpbiBpbnN0YW5jZSkge1xuICAgICAgbGV0IHZhbHVlID0gaW5zdGFuY2Vba2V5XTtcbiAgICAgIGlmIChpc0luamVjdGlvbih2YWx1ZSkpIHtcbiAgICAgICAgaW5qZWN0aW9uc1trZXldID0gY29udGFpbmVyLmxvb2t1cCh2YWx1ZS5sb29rdXApO1xuICAgICAgfVxuICAgIH1cbiAgICBjbGFzc01ldGEuaW5qZWN0aW9uc0NhY2hlID0gaW5qZWN0aW9ucztcbiAgfVxuICAvLyBjb25zb2xlLmxvZygnYXBwbHlpbmcgaW5qZWN0aW9ucyB0bycsIGluc3RhbmNlLCBjbGFzc01ldGEuaW5qZWN0aW9uc0NhY2hlKTtcbiAgT2JqZWN0LmFzc2lnbihpbnN0YW5jZSwgY2xhc3NNZXRhLmluamVjdGlvbnNDYWNoZSk7XG59XG4iXX0=