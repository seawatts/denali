"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const dag_map_1 = require("dag-map");
/**
 * Take an array of vertices (objects with a name, value, and optional before / after), create a
 * directed acyclic graph of them, and return the vertex values in a sorted array.
 *
 * @package util
 */
function topsort(items, options = {}) {
    let graph = new dag_map_1.default();
    items.forEach((item) => {
        let value = options.valueKey ? item[options.valueKey] : item;
        graph.add(item.name, value, item.before, item.after);
    });
    let sorted = [];
    graph.topsort((key, value) => {
        sorted.push(value);
    });
    return sorted;
}
exports.default = topsort;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9wc29ydC5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvc2Vhd2F0dHMvc3JjL2dpdGh1Yi5jb20vc2Vhd2F0dHMvZGVuYWxpLyIsInNvdXJjZXMiOlsibGliL3V0aWxzL3RvcHNvcnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxxQ0FBMEI7QUFTMUI7Ozs7O0dBS0c7QUFDSCxpQkFBZ0MsS0FBZSxFQUFFLFVBQWlDLEVBQUU7SUFDbEYsSUFBSSxLQUFLLEdBQUcsSUFBSSxpQkFBRyxFQUFFLENBQUM7SUFDdEIsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUk7UUFDakIsSUFBSSxLQUFLLEdBQUcsT0FBTyxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxHQUFHLElBQUksQ0FBQztRQUM3RCxLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3ZELENBQUMsQ0FBQyxDQUFDO0lBQ0gsSUFBSSxNQUFNLEdBQVUsRUFBRSxDQUFDO0lBQ3ZCLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLEVBQUUsS0FBSztRQUN2QixNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3JCLENBQUMsQ0FBQyxDQUFDO0lBQ0gsTUFBTSxDQUFDLE1BQU0sQ0FBQztBQUNoQixDQUFDO0FBWEQsMEJBV0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgREFHIGZyb20gJ2RhZy1tYXAnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFZlcnRleCB7XG4gIG5hbWU6IHN0cmluZztcbiAgYmVmb3JlOiBzdHJpbmcgfCBzdHJpbmdbXTtcbiAgYWZ0ZXI6IHN0cmluZyB8IHN0cmluZ1tdO1xuICBba2V5OiBzdHJpbmddOiBhbnk7XG59XG5cbi8qKlxuICogVGFrZSBhbiBhcnJheSBvZiB2ZXJ0aWNlcyAob2JqZWN0cyB3aXRoIGEgbmFtZSwgdmFsdWUsIGFuZCBvcHRpb25hbCBiZWZvcmUgLyBhZnRlciksIGNyZWF0ZSBhXG4gKiBkaXJlY3RlZCBhY3ljbGljIGdyYXBoIG9mIHRoZW0sIGFuZCByZXR1cm4gdGhlIHZlcnRleCB2YWx1ZXMgaW4gYSBzb3J0ZWQgYXJyYXkuXG4gKlxuICogQHBhY2thZ2UgdXRpbFxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB0b3Bzb3J0KGl0ZW1zOiBWZXJ0ZXhbXSwgb3B0aW9uczogeyB2YWx1ZUtleT86IHN0cmluZyB9ID0ge30pOiBhbnlbXSB7XG4gIGxldCBncmFwaCA9IG5ldyBEQUcoKTtcbiAgaXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgIGxldCB2YWx1ZSA9IG9wdGlvbnMudmFsdWVLZXkgPyBpdGVtW29wdGlvbnMudmFsdWVLZXldIDogaXRlbTtcbiAgICBncmFwaC5hZGQoaXRlbS5uYW1lLCB2YWx1ZSwgaXRlbS5iZWZvcmUsIGl0ZW0uYWZ0ZXIpO1xuICB9KTtcbiAgbGV0IHNvcnRlZDogYW55W10gPSBbXTtcbiAgZ3JhcGgudG9wc29ydCgoa2V5LCB2YWx1ZSkgPT4ge1xuICAgIHNvcnRlZC5wdXNoKHZhbHVlKTtcbiAgfSk7XG4gIHJldHVybiBzb3J0ZWQ7XG59XG4iXX0=